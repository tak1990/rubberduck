<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CodeInspectionResults_Type" xml:space="preserve">
    <value>種類</value>
  </data>
  <data name="CodeInspectionResults_Issue" xml:space="preserve">
    <value>問題</value>
  </data>
  <data name="CodeInspectionResults_Location" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="CodeInspections_NumberOfIssuesFound_Singular" xml:space="preserve">
    <value>Rubberduck コード検査 - {0}
{1} 件問題が見つかりました。</value>
  </data>
  <data name="CodeInspections_Inspecting" xml:space="preserve">
    <value>検査中...</value>
  </data>
  <data name="CodeInspections_NumberOfIssuesFound_Plural" xml:space="preserve">
    <value>Rubberduck コード検査 - {0}
{1} 件問題が見つかりました。</value>
  </data>
  <data name="CodeInspectionSettingsPage_InspectionSeveritySettingsLabel" xml:space="preserve">
    <value>検査の度数</value>
  </data>
  <data name="CodeInspectionSettingsPage_WhitelistedIdentifiersLabel" xml:space="preserve">
    <value>許可される識別子</value>
  </data>
  <data name="CodeInspectionSettingsPage_Misc" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="CodeInspectionSettingsPage_Misc_RunInspectionsOnSuccessfulParse" xml:space="preserve">
    <value>解析正常完了時、検査を自動的に実行する</value>
  </data>
  <data name="CodeInspectionSettingsPage_WhitelistedIdentifiersDescription" xml:space="preserve">
    <value>これらの識別子は、'意味のある名前を使用する' 検査では無視されます。</value>
  </data>
  <data name="CodeMetrics_Lines" xml:space="preserve">
    <value>行数</value>
  </data>
  <data name="CodeMetrics_Complexity" xml:space="preserve">
    <value>循環的複雑度</value>
  </data>
  <data name="CodeMetrics_Nesting" xml:space="preserve">
    <value>最大ネスト数</value>
  </data>
  <data name="CodeMetricsDockablePresenter_Caption" xml:space="preserve">
    <value>コード メトリックス</value>
  </data>
  <data name="CodeInspections" xml:space="preserve">
    <value>コード検査</value>
  </data>
  <data name="Command_Reparse_CompileOnDemandEnabled" xml:space="preserve">
    <value>VBE 設定の "手動コンパイル" は現在有効になっています。コンパイル エラーがある場合、解析結果に影響を及ぼす可能性があるため推奨できません。解析を行いますか?</value>
  </data>
  <data name="Command_Reparse_CompileOnDemandEnabled_Caption" xml:space="preserve">
    <value>手動コンパイル設定</value>
  </data>
  <data name="Command_Reparse_CannotCompile_Caption" xml:space="preserve">
    <value>解析用にコンパイルできません。</value>
  </data>
  <data name="Command_Reparse_CannotCompile" xml:space="preserve">
    <value>プロジェクトをコンパイルできません。続行しますか?{0}</value>
  </data>
  <data name="DeclarationType_BracketedExpression" xml:space="preserve">
    <value>実行時の式</value>
  </data>
  <data name="DeclarationType_ClassModule" xml:space="preserve">
    <value>クラス</value>
  </data>
  <data name="DeclarationType_Constant" xml:space="preserve">
    <value>定数</value>
  </data>
  <data name="DeclarationType_Control" xml:space="preserve">
    <value>コントロール</value>
  </data>
  <data name="DeclarationType_Enumeration" xml:space="preserve">
    <value>列挙型</value>
  </data>
  <data name="DeclarationType_EnumerationMember" xml:space="preserve">
    <value>列挙型のメンバー</value>
  </data>
  <data name="DeclarationType_Event" xml:space="preserve">
    <value>イベント</value>
  </data>
  <data name="DeclarationType_Function" xml:space="preserve">
    <value>関数</value>
  </data>
  <data name="DeclarationType_LibraryFunction" xml:space="preserve">
    <value>ライブラリ機能</value>
  </data>
  <data name="DeclarationType_LibraryProcedure" xml:space="preserve">
    <value>ライブラリプロシージャ</value>
  </data>
  <data name="DeclarationType_LineLabel" xml:space="preserve">
    <value>行ラベル</value>
  </data>
  <data name="DeclarationType_Parameter" xml:space="preserve">
    <value>パラメーター</value>
  </data>
  <data name="DeclarationType_ProceduralModule" xml:space="preserve">
    <value>モジュール</value>
  </data>
  <data name="DeclarationType_Procedure" xml:space="preserve">
    <value>プロシージャ</value>
  </data>
  <data name="DeclarationType_Project" xml:space="preserve">
    <value>プロジェクト</value>
  </data>
  <data name="DeclarationType_PropertyGet" xml:space="preserve">
    <value>プロパティ get アクセサー</value>
  </data>
  <data name="DeclarationType_PropertyLet" xml:space="preserve">
    <value>プロパティ let アクセサー</value>
  </data>
  <data name="DeclarationType_PropertySet" xml:space="preserve">
    <value>プロパティ set アクセサー</value>
  </data>
  <data name="DeclarationType_UserDefinedType" xml:space="preserve">
    <value>ユーザー定義型</value>
  </data>
  <data name="DeclarationType_UserDefinedTypeMember" xml:space="preserve">
    <value>ユーザー定義型メンバ</value>
  </data>
  <data name="DeclarationType_Variable" xml:space="preserve">
    <value>変数</value>
  </data>
  <data name="EasterEgg_Continuator" xml:space="preserve">
    <value>"Continuator" バッジを獲得しました!</value>
  </data>
  <data name="EmptyLineHandling_Indent" xml:space="preserve">
    <value>インデント</value>
  </data>
  <data name="EmptyLineHandling_Remove" xml:space="preserve">
    <value>除去</value>
  </data>
  <data name="EmptyLineHandling_Ignore" xml:space="preserve">
    <value>無視</value>
  </data>
  <data name="GroupingGrid_Filter" xml:space="preserve">
    <value>フィルター</value>
  </data>
  <data name="CodeInspectionSettingsPage_FilterByDescription" xml:space="preserve">
    <value>説明: </value>
  </data>
  <data name="CodeInspectionSettingsPage_FilterBySeverity" xml:space="preserve">
    <value>深刻度: </value>
  </data>
</root>