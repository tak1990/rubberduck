<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HotkeyRestrictionToolTip" xml:space="preserve">
    <value>このホットキー構成は、深刻な副作用を引き起こす可能性があります。</value>
  </data>
  <data name="WarnLogLevel" xml:space="preserve">
    <value>Warn</value>
  </data>
  <data name="TraceLogLevel" xml:space="preserve">
    <value>Trace</value>
  </data>
  <data name="SlashDelimiter" xml:space="preserve">
    <value>スラッシュ (/)</value>
  </data>
  <data name="ShowSplash" xml:space="preserve">
    <value>起動時にスプラッシュ画面を表示する</value>
  </data>
  <data name="ShowLogFolder" xml:space="preserve">
    <value>ログ フォルダの表示</value>
  </data>
  <data name="SetDpiUnaware" xml:space="preserve">
    <value>高解像度ディスプレイのスケーリング補正</value>
  </data>
  <data name="PeriodDelimiter" xml:space="preserve">
    <value>ピリオド (.)</value>
  </data>
  <data name="OffLogLevel" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="ModifierWarning" xml:space="preserve">
    <value>モディファイヤの警告</value>
  </data>
  <data name="MinimumLogLevelLabel" xml:space="preserve">
    <value>最小ログ レベル: </value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>表示言語: </value>
  </data>
  <data name="InfoLogLevel" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="IncludePreRelease" xml:space="preserve">
    <value>新しいプレリリースビルドが利用可能な場合に通知する。</value>
  </data>
  <data name="HotkeysLabel" xml:space="preserve">
    <value>ホットキー: </value>
  </data>
  <data name="HotkeyShift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="HotkeyRestrictionLabel" xml:space="preserve">
    <value>ホットキーには Alt または Ctrl を含める必要があります。</value>
  </data>
  <data name="HotkeyKey2" xml:space="preserve">
    <value>キー2</value>
  </data>
  <data name="HotkeyKey1" xml:space="preserve">
    <value>キー1</value>
  </data>
  <data name="HotkeyEnabled" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="HotkeyDescription" xml:space="preserve">
    <value>説明: </value>
  </data>
  <data name="HotkeyCtrl" xml:space="preserve">
    <value>Ctrl</value>
  </data>
  <data name="HotkeyAlt" xml:space="preserve">
    <value>Alt</value>
  </data>
  <data name="FolderDelimiterLabel" xml:space="preserve">
    <value>フォルダ区切り: </value>
  </data>
  <data name="FatalLogLevel" xml:space="preserve">
    <value>Fatal</value>
  </data>
  <data name="ExperimentalFeaturesWarning" xml:space="preserve">
    <value>この操作が何を意味するか理解している場合のみ、これらを有効にしてください。このセクションの機能を有効または使用した結果、予期しないデータ破損、復旧不可能なデータ損失の可能性があります。</value>
  </data>
  <data name="ExperimentalFeatures" xml:space="preserve">
    <value>お試し機能(要再起動): </value>
  </data>
  <data name="ErrorLogLevel" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="EnableDragAndDrop" xml:space="preserve">
    <value>コード エクスプローラーへのドラッグ アンド ドロップを有効にする</value>
  </data>
  <data name="DebugLogLevel" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="CompileBeforeParse_WarnCompileOnDemandEnabled_Caption" xml:space="preserve">
    <value>手動コンパイルは現在有効です</value>
  </data>
  <data name="CompileBeforeParse_WarnCompileOnDemandEnabled" xml:space="preserve">
    <value>VBE 設定の "手動コンパイル" は現在有効になっています。[解析前にコンパイル] 機能を使用するには、[一般] タブの [VBE オプション] ダイアログで設定を無効にすることを強くお勧めします。今すぐ無効にしますか?

注: 設定を有効にするには再起動が必要です。</value>
  </data>
  <data name="CompileBeforeParse" xml:space="preserve">
    <value>解析前にコードをコンパイルする</value>
  </data>
  <data name="CheckVersion" xml:space="preserve">
    <value>起動時に新しいバージョンが利用可能かどうかを確認します。</value>
  </data>
</root>